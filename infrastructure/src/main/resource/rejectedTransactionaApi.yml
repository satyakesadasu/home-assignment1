openapi: 3.0.1
info:
  title: Booking Transaction Request
  version: "1.0"
  description: |
    Provides Interface to receive request for Booking transactions, process the information and returns list of Rejected Transactions
  contact:
    name: Team Name
    url: tbd
    email: teamSupportEmailID@mail.com
servers:
  - url: "http:localhost:8080/{basePath}"
    variables:
      basePath:
        default: "booking"
paths:
  '/booking/rejectedTransactionsAsList':
    post:
      summary: Receive request for Booking transactions, process the information and returns list of Rejected Transactions
      tags:
        - Transaction Booking request
      description: This API is used to receive the Booking transactions requestprocess the information and returns list of Rejected
      operationId: rejectedTransactionsAsList
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionBookingRequest'
      responses:
        '200':
          description: Rejected Transactions recieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectedTransactionResponse'
        '400':
          description: |
            Bad Request. This is thrown when one of the following occurs
            1. Invalid data
            2. Invalid Input data type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: "Internal Server Error. The request processing has failed because of an unknown error, exception or failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  '/booking/rejectedTransactionsAsFlux':
    post:
      summary: Receive request for Booking transactions, process the information and returns objects of Rejected Transactions
      tags:
        - Transaction Booking request as flux
      description: This API is used to receive the Booking transactions requestprocess the information and returns object
      operationId: rejectedTransactionsAsFlux
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionBookingRequest'
      responses:
        '200':
          description: Rejected Transactions recieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RejectedTransactionFLux'
        '400':
          description: |
            Bad Request. This is thrown when one of the following occurs
            1. Invalid data
            2. Invalid Input data type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '500':
          description: "Internal Server Error. The request processing has failed because of an unknown error, exception or failure"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unexpected error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    TransactionBookingRequest:
      description: Transaction Booking Request
      type: object
      required:
        - userCreditLimitDetials
        - tranasctionDetails
      properties:
        userCreditLimitDetials:
          type: array
          items:
            type: string
            example: [ 'john@doe.com,5000','john@doe1.com,0','john@doe2.com,0' ]
        tranasctionDetails:
          type: array
          items:
            type: string
            example: [ 'John,Doe,john@doe.com,190,TR0001','John,Doe1,john@doe1.com,200,TR0001','John,Doe2,john@doe2.com,201,TR0003','John,Doe,john@doe.com,9,TR0004','John,Doe,john@doe.com,2,TR0005' ]
    RejectedTransactionResponse:
      description: Rejected Transaction Response
      type: object
      properties:
        Rejected Transactions:
          $ref: '#/components/schemas/RejectedTransactionObject'
    RejectedTransactionObject:
      type: array
      items:
        $ref: '#/components/schemas/RejectedTransaction'
    RejectedTransaction:
      properties:
        First Name:
          type: string
          example: 'John'
          description: First Name of the User from the Booking Transaction
        Last Name:
          type: string
          example: 'Doe'
          description: First Name of the User from the Booking Transaction
        Email ID:
          type: string
          example: 'John@Doe2.com'
          description: First Name of the User from the Booking Transaction
        Transaction Number:
          type: string
          example: 'TR003'
          description: First Name of the User from the Booking Transaction
    RejectedTransactionFLux:
      properties:
        First Name:
          type: string
          example: 'John'
          description: First Name of the User from the Booking Transaction
        Last Name:
          type: string
          example: 'Doe'
          description: First Name of the User from the Booking Transaction
        Email ID:
          type: string
          example: 'John@Doe2.com'
          description: First Name of the User from the Booking Transaction
        Transaction Number:
          type: string
          example: 'TR003'
          description: First Name of the User from the Booking Transaction
    ErrorResponse:
      type: object
      required:
        - timestamp
        - statusCode
        - message
      properties:
        timestamp:
          description: Time Stamp of the request
          type: string
        statusCode:
          description: HTTP Status Code of the request
          type: integer
        message:
          description: Description of the error to be used for debugging. Not suitable to show to an enduser.
          type: string
